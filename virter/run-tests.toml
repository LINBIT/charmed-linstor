[values]
AnsibleImage = "quay.io/ansible/ansible-runner:stable-2.9-latest"
TestImage = "nexus.at.linbit.com:5000/linstor-kubernetes-tests/tests:latest"
DrbdIoUsername = ""
DrbdIoPassword = ""

Focus = ""
Skip = ""
OutDir = "./run/"

[[steps]]
[steps.docker]
image = "{{.AnsibleImage}}"
command = [
    "ansible-playbook", "-i", "/virter/workspace/virter/inventory", "/virter/workspace/virter/microk8s.yaml", "-e", "out_dir=/run",
]
[steps.docker.env]
ANSIBLE_PIPELINING="true"
[steps.docker.copy]
source = "/run/kubeconfig"
dest = "{{ .OutDir }}"

[[steps]]
[steps.rsync]
source = "*.charm"
dest = "/opt/charms/"

[[steps]]
[steps.shell]
script = """
if ! command -v juju ; then
    exit 0
fi

juju add-model linstor

trap 'juju status ; microk8s.kubectl describe pod -n linstor' EXIT

cat > linbit.secret <<EOF
{
  "username": "$DRBD_IO_USERNAME",
  "password": "$DRBD_IO_PASSWORD"
}
EOF
echo "{}" > image-override.json

juju deploy /opt/charms/linstor-controller*.charm --resource pull-secret=linbit.secret --resource image-override=image-override.json
juju deploy /opt/charms/linstor-satellite*.charm --resource pull-secret=linbit.secret --resource image-override=image-override.json --config storage-pools='name=thinpool,provider=LVM_THIN,provider_name=linstor_thinpool/thinpool,devices=/dev/vdc' --config injection-mode=compile
juju deploy /opt/charms/linstor-csi-controller*.charm --resource pull-secret=linbit.secret --resource image-override=image-override.json
juju deploy /opt/charms/linstor-csi-node*.charm --resource pull-secret=linbit.secret --resource image-override=image-override.json
juju deploy /opt/charms/linstor-ha-controller*.charm --resource pull-secret=linbit.secret --resource image-override=image-override.json

juju add-relation linstor-controller:linstor-api linstor-csi-controller:linstor
juju add-relation linstor-controller:linstor-api linstor-csi-node:linstor
juju add-relation linstor-controller:linstor-api linstor-ha-controller:linstor
juju add-relation linstor-controller:linstor-api linstor-satellite:linstor

timeout 600 bash -c -- "while juju status --format=json | jq -r '.applications[][\\"application-status\\"].current' | grep -cv active >/dev/null ; do echo Not all charms active ; sleep 10; done"
"""
[steps.shell.env]
DRBD_IO_USERNAME = "{{ .DrbdIoUsername }}"
DRBD_IO_PASSWORD = "{{ .DrbdIoPassword }}"

[[steps]]
[steps.docker]
image = "{{ .TestImage }}"
command = [
    "sh", "-exc",
    """
    mkdir -p /virter/out/

    k8s-e2e-storage-tests --ginkgo.reportFile=/virter/out/k8s-e2e-storage-report.xml "--ginkgo.focus={{ .Focus }}" "--ginkgo.skip={{ .Skip }}" --kubeconfig=$KUBECONFIG --e2e-verify-service-account=false
    """
]
[steps.docker.env]
KUBECONFIG = "/virter/workspace/{{ .OutDir }}/kubeconfig"
[steps.docker.copy]
source = "/virter/out/"
dest = "{{ .OutDir }}"
