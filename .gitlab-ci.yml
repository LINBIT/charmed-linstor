stages:
  - prepare
  - provision
  - test
  - deploy

variables:
  VIRTER_VERSION: v0.18.1
  VMSHED_VERSION: v0.15.0
  BUILD_HELPERS_VERSION: dfbf85c26dd39ad1a88807b01fda1dc1d536abbb

prepare-bins:
  image:
    name: ${LINBIT_DOCKER_REGISTRY}/build-helpers:${BUILD_HELPERS_VERSION}
  stage: prepare
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  script:
    - . /usr/local/bin/gitlab-utils.sh
    - ci_prepare_tools
    - ci_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
    - ci_fetch_binary vmshed vmshed-$VMSHED_VERSION https://github.com/LINBIT/vmshed/releases/download/$VMSHED_VERSION/vmshed-linux-amd64
  artifacts:
    paths:
      - download
      - bin

prepare-image:
  stage: prepare
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - mkdir -p /kaniko/.docker
    - echo "$DOCKER_AUTH_CONFIG" > /kaniko/.docker/config.json
    - /kaniko/executor --registry-mirror $DOCKER_REGISTRY_MIRROR --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/.gitlab/builder.Dockerfile --destination ${LINBIT_DOCKER_REGISTRY}/charmed-linstor/builder:${CI_COMMIT_REF_SLUG} --cache

provision:
  stage: provision
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  tags:
    - libvirt
  script:
    - export PATH=$PWD/bin:$PATH
    - BUILD_ID=$(git rev-list -1 HEAD -- virter/base-image.toml virter/base-image-play.yml virter/config virter/inventory)
    - ln -snf "$DOCKER_AUTH_CONFIG_FILE" $HOME/.docker/config.json
    - virter image build ${LINBIT_DOCKER_REGISTRY}/vm/ubuntu-focal:latest ${LINBIT_DOCKER_REGISTRY}/charmed-linstor/base-vm:latest --bootcap 10G --provision virter/base-image.toml --push --build-id $BUILD_ID

build-charms:
  stage: provision
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  image: ${LINBIT_DOCKER_REGISTRY}/charmed-linstor/builder:${CI_COMMIT_REF_SLUG}
  script:
    - |
      for META in */metadata.yaml ; do
        charmcraft pack -p $(dirname $META) --destructive-mode
      done
  cache:
    key: build-cache-$CI_COMMIT_REF_SLUG
    paths:
      - ./*/build
  artifacts:
    paths:
      - ./linstor/linstor.zip
      - ./*.charm

test-unit:
  image: python:3.9
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  script:
    - |
      for META in */metadata.yaml ; do
        (
          cd $(dirname $META)
          if [ ! -f requirements-dev.txt ]; then exit 0; fi
          python -m venv venv
          . venv/bin/activate
          pip install -r requirements-dev.txt
          ./run_tests
        )
      done

test-e2e:
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_TAG
  tags:
    - libvirt
  script:
    - mkdir -p virter/image-configs
    - cp $LINSTOR_CONTROLLER_CONF virter/image-configs/linstor-controller.json
    - cp $LINSTOR_SATELLITE_CONF virter/image-configs/linstor-satellite.json
    - cp $DRBD_INJECTOR_CONF virter/image-configs/drbd-injector.json
    - cp $LINSTOR_CSI_CONF virter/image-configs/linstor-csi.json
    - cp $LINSTOR_HA_CONTROLLER_CONF virter/image-configs/linstor-ha-controller.json
    - sed "s#charmed-linstor-base-image#${LINBIT_DOCKER_REGISTRY}/charmed-linstor/base-vm:latest#" virter/vms.toml > .tmp-vms.toml
    - export PATH=$PWD/bin:$PATH
    - vmshed --vms .tmp-vms.toml --tests virter/tests.toml --set values.TestRunnerImage=${LINBIT_DOCKER_REGISTRY}/charmed-linstor/builder:${CI_COMMIT_REF_SLUG}
  artifacts:
    paths:
      - tests-out
