stages:
  - prepare
  - build
  - test
  - deploy

variables:
  VIRTER_VERSION: v0.18.1
  VMSHED_VERSION: v0.15.0
  BUILD_HELPERS_VERSION: dfbf85c26dd39ad1a88807b01fda1dc1d536abbb

prepare-bins:
  image:
    name: ${LINBIT_DOCKER_REGISTRY}/build-helpers:${BUILD_HELPERS_VERSION}
  stage: prepare
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  script:
    - . /usr/local/bin/gitlab-utils.sh
    - ci_prepare_tools
    - ci_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
    - ci_fetch_binary vmshed vmshed-$VMSHED_VERSION https://github.com/LINBIT/vmshed/releases/download/$VMSHED_VERSION/vmshed-linux-amd64
  artifacts:
    paths:
      - download
      - bin

prepare-image:
  stage: prepare
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - mkdir -p /kaniko/.docker
    - echo "$DOCKER_AUTH_CONFIG" > /kaniko/.docker/config.json
    - /kaniko/executor --registry-mirror $DOCKER_REGISTRY_MIRROR --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/.gitlab/builder.Dockerfile --destination ${LINBIT_DOCKER_REGISTRY}/charmed-linstor/builder:${CI_COMMIT_REF_SLUG} --cache

build-charms:
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  image: ${LINBIT_DOCKER_REGISTRY}/charmed-linstor/builder:${CI_COMMIT_REF_SLUG}
  script:
    - |
      for META in */metadata.yaml ; do
        charmcraft pack -p $(dirname $META) --destructive-mode
      done
  cache:
    key: build-cache-$CI_COMMIT_REF_SLUG
    paths:
      - ./*/build
  artifacts:
    paths:
      - ./linstor/linstor.zip
      - ./*.charm

test-unit:
  image: python:3.9
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_TAG
  script:
    - |
      for META in */metadata.yaml ; do
        (
          cd $(dirname $META)
          if [ ! -f requirements-dev.txt ]; then exit 0; fi
          python -m venv venv
          . venv/bin/activate
          pip install -r requirements-dev.txt
          ./run_tests
        )
      done

test-e2e:
  stage: test
  timeout: 3h
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_TAG
  tags:
    - libvirt
  variables:
    SKIP: "Slow|LinuxOnly|xfs|ext3|ext4|immediate-binding|retain policy|readOnly|read-only|exec|multiple|subPath"
  script:
    - export PATH=$PWD/bin:$PATH
    - virter image pull ubuntu-focal ${LINBIT_DOCKER_REGISTRY}/vm/ubuntu-focal:latest
    - vmshed --vms virter/vms.toml --tests virter/tests.toml --set values.DrbdIoUsername=${PUBLISH_REGISTRY_USER} --set values.DrbdIoPassword=${PUBLISH_REGISTRY_PASSWORD} --set "values.Skip=$SKIP"
  artifacts:
    when: always
    paths:
      - tests-out
    reports:
      junit:
        # These reports are created by vmshed, reporting if the test command itself succeeded.
        - tests-out/test-results/*.xml
        # These reports are created by the test binaries, holding details about all tests that ran.
        - tests-out/log/**/*-report.xml
